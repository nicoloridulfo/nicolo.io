{"mappings":"AAAA,IAAIA,OAA4BC,SAASC,eAAe,UACxD,MAAMC,MAA4B,EAApBC,OAAOC,WACfC,OAA8B,EAArBF,OAAOG,YAChBC,SAAW,EAEjBR,OAAOG,MAAQA,MAEfH,OAAOM,OAASA,OAChB,MAAMG,IAAMT,OAAOU,WAAW,MAExBC,KAAOC,MAAMC,KAAKC,MAAMR,OAPb,IAQdS,KAAK,MACLC,KAAG,IAAOJ,MAAMC,KAAKC,MAAMX,MATb,IASgCY,MAAK,cAE7CE,KAAKC,GAEZ,MAAMC,EAAQ,CACZ,KAAO,EACP,KAAO,EACP,KAAO,EACP,KAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,GAcHC,EAAMR,MAAMM,EAAIG,QAAQN,MAAK,GAEnC,IAAK,IAAIO,EAAI,EAAGA,EAAIJ,EAAIG,OAAS,EAAGC,IAClCF,EAAIE,GACFH,EACED,EACGK,MAAMD,EAAI,EAAGA,EAAI,GACjBN,KAAKQ,GAAOA,EAAI,IAAM,MACtBC,KAAK,KAGd,OAAOL,EAETT,KAAK,GAAGE,KAAKC,MAAMH,KAAK,GAAGU,OAAS,KAAM,EAC1C,IAAK,IAAIK,EAAI,EAAGA,EAAIf,KAAKU,OAAS,EAAGK,IAAK,CACxC,IAAK,IAAIF,EAAI,EAAGA,EAAIb,KAAKe,GAAGL,OAAQG,IAC9Bb,KAAKe,GAAGF,IACVf,IAAIkB,SApDO,EAoDEH,EApDF,EAoDgBE,EApDhB,EAAA,GAsDff,KAAKe,EAAI,GAAKT,KAAKN,KAAKe","sources":["src/index.ts"],"sourcesContent":["var canvas = <HTMLCanvasElement>document.getElementById(\"canvas\");\nconst width = window.innerWidth * 5;\nconst height = window.innerHeight * 3;\nconst cellSize = 4;\n// @ts-ignore:\ncanvas.width = width;\n// @ts-ignore:\ncanvas.height = height;\nconst ctx = canvas.getContext(\"2d\");\n// Create a grid the size of the window/Sceeillz;\nconst grid = Array(Math.floor(height / cellSize))\n  .fill(null)\n  .map(() => Array(Math.floor(width / cellSize)).fill(false));\n\nfunction rule(row: boolean[]) {\n  // Rule 30\n  const rules = {\n    \"111\": false,\n    \"110\": false,\n    \"101\": false,\n    \"100\": true,\n    \"011\": true,\n    \"010\": true,\n    \"001\": true,\n    \"000\": false,\n  };\n\n  // Rule 110\n  // const rules = {\n  //   \"111\": false,\n  //   \"110\": true,\n  //   \"101\": true,\n  //   \"100\": false,\n  //   \"011\": true,\n  //   \"010\": true,\n  //   \"001\": true,\n  //   \"000\": false\n  // }\n  const arr = Array(row.length).fill(false);\n\n  for (let i = 1; i < row.length - 1; i++) {\n    arr[i] =\n      rules[\n        row\n          .slice(i - 1, i + 2)\n          .map((x) => (x ? \"1\" : \"0\"))\n          .join(\"\")\n      ];\n  }\n  return arr;\n}\ngrid[0][Math.floor(grid[0].length / 2)] = true;\nfor (let y = 0; y < grid.length - 1; y++) {\n  for (let x = 0; x < grid[y].length; x++) {\n    if (grid[y][x])\n      ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n  }\n  grid[y + 1] = rule(grid[y]);\n}\n"],"names":["canvas","document","getElementById","width","window","innerWidth","height","innerHeight","cellSize","ctx","getContext","grid","Array","Math","floor","fill","map","rule","row","rules","arr","length","i","slice","x","join","y","fillRect"],"version":3,"file":"index.3218d51e.js.map"}